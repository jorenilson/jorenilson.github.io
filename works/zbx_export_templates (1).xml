<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2022-11-26T04:30:08Z</date>
    <groups>
        <group>
            <name>MNSG001 - Switches L2 and L3</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template SNMP interfaces em uso</template>
            <name>Template SNMP interfaces em uso</name>
            <groups>
                <group>
                    <name>MNSG001 - Switches L2 and L3</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Dias</name>
                </application>
                <application>
                    <name>Dias {#IFNAME}</name>
                </application>
                <application>
                    <name>Horas</name>
                </application>
                <application>
                    <name>Horas {#IFNAME}</name>
                </application>
                <application>
                    <name>Status</name>
                </application>
                <application>
                    <name>Status {#IFNAME}</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>Descoberta de interfaces em uso</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#IFLASTIN},.1.3.6.1.4.1.9.2.2.1.1.3,{#IFDESCR},1.3.6.1.2.1.2.2.1.2,{#IFADMINSTATUS},1.3.6.1.2.1.2.2.1.7,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18]</snmp_oid>
                    <key>net.interfaces.inf</key>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>^Gi</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>^Fa0/</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>^Twe1/</value>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>^Eth1/</value>
                                <formulaid>D</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Esta regra de descoberta tem o objetivo de obter o último last input da interface dos switches para que seja utilizado como base para saber quando a interface foi utilizada pela última vez.&#13;
&#13;
Criada por: Jorenilson Santos (jorenilsonlopes@gmail.com)</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Dados de entrada da interface</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>.1.3.6.1.4.1.9.2.2.1.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>net.interfaces.inf.1[{#IFNAME}]</key>
                            <delay>30s</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>var milliseconds = parseInt((value % 1000) / 100),
seconds = Math.floor((value / 1000) % 60),
minutes = Math.floor((value / (1000 * 60)) % 60),
hours = Math.floor((value / (1000 * 60 * 60)) % 24),
day = Math.floor(value / (1000*60*60*24));

hours = (hours &lt; 10) ? &quot;0&quot; + hours : hours;
minutes = (minutes &lt; 10) ? &quot;0&quot; + minutes : minutes;
seconds = (seconds &lt; 10) ? &quot;0&quot; + seconds : seconds;

return day + &quot;d &quot; + hours + &quot;:&quot; + minutes + &quot;:&quot; + seconds + &quot;.&quot; + milliseconds;</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Dias</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>.1.3.6.1.4.1.9.2.2.1.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>net.interfaces.inf.2[{#IFNAME}]</key>
                            <delay>30s</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>return day = Math.floor(value / (1000*60*60*24));</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Horas</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>.1.3.6.1.4.1.9.2.2.1.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>net.interfaces.inf.3[{#IFNAME}]</key>
                            <delay>30s</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>return hours = Math.floor((value / (1000 * 60 * 60)) % 24);</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Status Operacional</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
                            <key>net.interfaces.inf.4[{#IFNAME}]</key>
                            <delay>30s</delay>
                            <history>30d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>IF-MIB::ifOperStatus</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Uptime</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.2.1.1.3.0</snmp_oid>
                            <key>sistema.uptime[sysUpTime.0]</key>
                            <delay>30s</delay>
                            <history>30d</history>
                            <units>uptime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Uptime</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.01</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template SNMP interfaces em uso:net.interfaces.inf.4[{#IFNAME}].last()}=2 and ({Template SNMP interfaces em uso:net.interfaces.inf.2[{#IFNAME}].last()}&gt;=7 or {Template SNMP interfaces em uso:net.interfaces.inf.2[{#IFNAME}].last()}=-1) and ({Template SNMP interfaces em uso:net.interfaces.inf.3[{#IFNAME}].last()}&gt;=0 or {Template SNMP interfaces em uso:net.interfaces.inf.3[{#IFNAME}].last()}=-1)</expression>
                            <name>Porta disponível {#IFNAME}</name>
                            <priority>INFO</priority>
                            <description>Se a Interface estiver em status de down.&#13;
E Dias maior ou igual a 7 OU -1 E Horas maior ou igual a 0 OU -1.&#13;
&#13;
Expressão:&#13;
Se ((Interface = Down) AND ((Dias&gt;=7) OR (Dias=-1)) AND ((Horas&gt;=0) OR (Horas=-1))){&#13;
&#13;
}</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
            </discovery_rules>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>IF-MIB::ifOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>up</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>down</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>dormant</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>notPresent</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>lowerLayerDown</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
